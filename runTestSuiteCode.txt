
;; Each element is one test (fn of mainState)
(def steps
  [;; 1
   (fn [mainState] (h/run-test! mainState "download-flipbook" download-flipbook-step))
   ;; 2
   (fn [mainState] (h/run-test! mainState "upload-owl"
                                (make-upload-step "owlBuddycloudinary.json")))
   ;; 3 ... add more
   ])

(defn functionTest
  "Arity-1: run ALL tests once in order.
   Arity-2: run the given 1-based positions in the SAME order (duplicates allowed)."
  ([mainState]
   (mapv #(% mainState) steps))
  ([mainState positions]
   (mapv (fn [pos]
           (if-let [step (nth steps (dec pos) nil)]
             (step mainState)
             {:position pos :ok false :error :no-such-test}))
         positions)))